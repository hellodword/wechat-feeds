name: sync feeds

on: 
  page_build:
  workflow_dispatch:

jobs:
  check:
    timeout-minutes: 30
    name: sync-feeds
    runs-on: ubuntu-latest
    steps:
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
        with:
          ref: 'feeds'
          path: 'feeds'

      - id: set_commit_message_1
        run: |
          cd feeds
          echo ::set-output name=COMMIT_MSG::$(git rev-parse --short HEAD)

      - run: |
          cd feeds
          echo "${{ steps.set_commit_message_1.outputs.COMMIT_MSG }}"

      - name: sync feeds
        run: |
          cd feeds
          rm -rf .git
          git init
          git remote add origin "https://gitee.com/${{ secrets.YOUR_GITEE_NAME }}/${{ secrets.TARGET_NAME }}.git"  >/dev/null 2>&1
          git config user.name    "${{ secrets.YOUR_GITEE_NAME }}"
          git config user.email   "${{ secrets.YOUR_GITEE_EMAIL }}"
          git add .
          git gc
          COMMIT_MSG=$(date "+%Y-%m-%d %H:%M:%S")
          git commit -m "${{ steps.set_commit_message_1.outputs.COMMIT_MSG }}" >/dev/null 2>&1
          git checkout -b feeds  >/dev/null 2>&1
          git branch -d master  >/dev/null 2>&1
          git push -f --repo "https://${{ secrets.YOUR_GITEE_NAME }}:${{ secrets.YOUR_GITEE_PWD }}@gitee.com/${{ secrets.YOUR_GITEE_NAME }}/${{ secrets.TARGET_NAME }}.git"  >/dev/null 2>&1



      - uses: actions/checkout@v2
        with:
          ref: 'pages'
          path: 'pages'

      - id: set_commit_message_2
        run: |
          cd pages
          echo ::set-output name=COMMIT_MSG::$(git rev-parse --short HEAD)

      - run: |
          cd pages
          echo "${{ steps.set_commit_message_2.outputs.COMMIT_MSG }}"

      - name: sync pages
        run: |
          cd pages
          rm -rf .git
          git init
          git remote add origin "https://gitee.com/${{ secrets.YOUR_GITEE_NAME }}/${{ secrets.TARGET_NAME }}.git"  >/dev/null 2>&1
          git config user.name    "${{ secrets.YOUR_GITEE_NAME }}"
          git config user.email   "${{ secrets.YOUR_GITEE_EMAIL }}"
          git add .
          git gc
          git commit -m "${{ steps.set_commit_message_2.outputs.COMMIT_MSG }}" >/dev/null 2>&1
          git checkout -b pages  >/dev/null 2>&1
          git branch -d master  >/dev/null 2>&1
          git push -f --repo "https://${{ secrets.YOUR_GITEE_NAME }}:${{ secrets.YOUR_GITEE_PWD }}@gitee.com/${{ secrets.YOUR_GITEE_NAME }}/${{ secrets.TARGET_NAME }}.git"  >/dev/null 2>&1

      - name: page rebuild
        run: |
          # secrets with double quotes need single quotes
          # {"a":"a"} ~ {a:a}
          response=$(curl -s --request POST --url "${{ secrets.YOUR_GITEE_REBUILD_URL }}" -H "${{ secrets.YOUR_GITEE_REBUILD_HEADER }}" --data '${{ secrets.YOUR_GITEE_REBUILD_DATA }}')
          
          if [[ "${response}" != "ok" ]]; then
              echo "${response}"
              exit 1
          fi

      - name: gc
        run: |
          # secrets with double quotes need single quotes
          # {"a":"a"} ~ {a:a}
          response=$(curl -s --request POST --url "${{ secrets.YOUR_GITEE_GC_URL }}" -H "${{ secrets.YOUR_GITEE_GC_HEADER }}" --data '${{ secrets.YOUR_GITEE_GC_DATA }}')
          
          if [[ "${response}" != "ok" ]]; then
              echo "${response}"
              exit 1
          fi
