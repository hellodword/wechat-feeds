name: check failed bizid
on:
  issues:
    types: [opened]

jobs:
  permission:
    name: permission check
    runs-on: ubuntu-latest
    if: github.actor == github.event.repository.owner.login
    steps:
      - name: check permission
        run: echo permission pass
  format:
    name: format check
    needs: permission
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.issue.title, 'check biz')
    steps:
      - name: check format
        run: echo "checked body ${{ github.event.issue.title }}"
  issue-auto-label:
    name: issues auto label
    needs: format
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['check']
            })
  build:
    name: Build
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          cd check-failed-biz
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Run
        id: check
        run: |
          cd check-failed-biz
          body=$(go run main.go)
          echo ::set-output name=body::$(echo "${body}")

      - uses: actions/github-script@0.4.0
        if: |
          steps.check.outputs.body != ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "${{ steps.check.outputs.body }}"
            })

      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed"
            })
