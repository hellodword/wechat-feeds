name: check pr
on:
  pull_request:
    paths:
      - "list.csv"
    branches:
      - main

jobs:
  check:
    timeout-minutes: 10
    name: check pull request
    runs-on: ubuntu-latest
    steps:
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

      - id: files
        uses: jitterbit/get-changed-files@v1

      - run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            if [ "${changed_file}" != "list.csv" ];then
              echo "changed file: ${changed_file}."
              exit 1
            fi
          done

      - name: check commits number
        if: |
          github.event.pull_request.commits != 1
        run: |
          echo "这个 pr 有 ${{ github.event.pull_request.commits }} 个 commits，请确保只有一个 commit，你可以关闭这个 pr 重新提一个。"
          exit 1

      - uses: actions/github-script@v3
        id: get-latest-commit
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            // console.log(JSON.stringify(context));
            console.log(context.repo.owner, context.repo.repo, context.payload.number);
            const result = await github.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.number,
            });
            console.log(JSON.stringify(result));
            return result.data[0].commit.message.split("\n")[0]; // 只截取 commit message 第一行


      - name: check commit message
        run: |
          echo "The commit message:"
          echo "${{ steps.get-latest-commit.outputs.result }}"

          if [[ ! "$str" =~ ^新增:( [^ ]+){1,}$ ]]; then
            echo '提交信息不符合格式，请仔细阅读第三步。'
            echo '为了方便自动化，所以需要定一个格式，希望理解。'
            exit 1
          fi

          # if [ "${{ steps.get-latest-commit.outputs.result }}" == "" ];then
          #   echo "list commits error"
          #   exit 1
          # fi

          # if [ "${{ steps.get-latest-commit.outputs.result }}" == "undefined" ];then
          #   echo "list commits error"
          #   exit 1
          # fi

          # if [ "${{ steps.get-latest-commit.outputs.result }}" == "Update list.csv" ];then
          #   echo "修改提交时的提交信息不要是默认的 Update list.csv，请仔细阅读第三步。"
          #   exit 1
          # fi

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: check utf bom
        run: |
          if [ "$(hexdump -n 3 -C list.csv | grep -o " ef bb bf")" != " ef bb bf" ]; then
              echo "list.csv 必须是 UTF8-BOM，请不要修改格式"
              exit 1
          fi

      # - name: Turnstyle
      #   uses: softprops/turnstyle@v1
      #   with:
      #    continue-after-seconds: 180
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      - name: Get dependencies
        run: |
          cd check-pr
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Check
        run: |
          cd check-pr
          go run main.go
